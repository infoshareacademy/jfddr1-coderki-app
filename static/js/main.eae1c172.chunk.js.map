{"version":3,"sources":["views/AuthPage.module.css","components/Menu.module.css","components/AccountInfo.module.css","components/TaskContainer.module.css","AppRouter.module.css","img/home.svg","img/calendar.svg","img/checkbox.svg","img/settings.svg","views/SettingsPage.module.css","img/logo.png","views/AuthPage.js","components/Menu.js","components/TaskContainer.js","views/HomePage.js","views/CalendarPage.js","views/TasksPage.js","components/AccountInfo.js","views/SettingsPage.js","AppRouter.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Footer","AuthPage","useState","showRepeatPassword","setShowRepeatPassword","className","styles","container","authForm","type","name","placeholder","registerbtn","signin","href","onClick","Menu","menu","to","src","home","navItem","alt","calendar","checkbox","settings","TaskContainer","smallerText","TitleText","HomePage","CalendarPage","TasksPage","AccountInfo","title","buttonContainer","SettingsPage","AppRouter","logo","path","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.eae1c172.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AuthPage_container__Ecj58\",\"authForm\":\"AuthPage_authForm__2USCG\",\"registerbtn\":\"AuthPage_registerbtn__28X3H\",\"signin\":\"AuthPage_signin__3-GUW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"Menu_menu__36kQ_\",\"navItem\":\"Menu_navItem__1H0G3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"AccountInfo_title___yWGO\",\"form\":\"AccountInfo_form__QzTlg\",\"buttonContainer\":\"AccountInfo_buttonContainer__jrALT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TaskContainer_container__jsGaG\",\"smallerText\":\"TaskContainer_smallerText__21uoD\",\"titleText\":\"TaskContainer_titleText__2sukt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"AppRouter_logo__3b_RZ\"};","module.exports = __webpack_public_path__ + \"static/media/home.261cde57.svg\";","module.exports = __webpack_public_path__ + \"static/media/calendar.b4cb4ea7.svg\";","module.exports = __webpack_public_path__ + \"static/media/checkbox.d9b70962.svg\";","module.exports = __webpack_public_path__ + \"static/media/settings.4551cf72.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SettingsPage_container__1WLEh\",\"title\":\"SettingsPage_title__1a9Ez\"};","module.exports = __webpack_public_path__ + \"static/media/logo.15a171fb.png\";","import React, { useState } from 'react';\r\nimport styles from './AuthPage.module.css';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div>\r\n      <h2>This will be a footer</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AuthPage = () => {\r\n  const [showRepeatPassword, setShowRepeatPassword] = useState(true);\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.container}>\r\n        <form className={styles.authForm}>\r\n          <label>Email </label>\r\n          <input type=\"email\" name=\"email\" placeholder=\"Enter Email\" />\r\n          <label>Password </label>\r\n          <input type=\"password\" name=\"password\" placeholder=\"Enter Password\" />\r\n          {showRepeatPassword && (\r\n            <div>\r\n              <label>Confirm password </label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"password-repeat\"\r\n                placeholder=\"Repeat Password\"\r\n              />\r\n            </div>\r\n          )}\r\n          <button type=\"submit\" className={styles.registerbtn}>\r\n            {showRepeatPassword ? 'Register' : 'Login'}\r\n          </button>\r\n        </form>\r\n        <div className={styles.signin}>\r\n          <p>\r\n            {showRepeatPassword\r\n              ? 'Already have an account? '\r\n              : \"Don't have an account? \"}\r\n            <a\r\n              href=\"#\"\r\n              onClick={() => setShowRepeatPassword(!showRepeatPassword)}\r\n            >\r\n              {showRepeatPassword ? 'Sign in' : 'Register'}\r\n            </a>\r\n            .\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthPage;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styles from './Menu.module.css';\r\nimport home from '../img/home.svg';\r\nimport calendar from '../img/calendar.svg';\r\nimport checkbox from '../img/checkbox.svg';\r\nimport settings from '../img/settings.svg';\r\n\r\nconst Menu = () => {\r\n  return (\r\n    <nav className={styles.menu}>\r\n      <NavLink to=\"/auth\">Auth</NavLink>\r\n      <NavLink to=\"/home\">\r\n        <img\r\n          src={home}\r\n          className={styles.navItem}\r\n          alt=\"navigate to home page\"\r\n        />\r\n      </NavLink>\r\n      <NavLink to=\"/calendar\" className=\"Nav-item\">\r\n        <img\r\n          src={calendar}\r\n          className={styles.navItem}\r\n          alt=\"navigate to home page\"\r\n        />\r\n      </NavLink>\r\n      <NavLink to=\"/tasks\" className=\"Nav-item\">\r\n        <img\r\n          src={checkbox}\r\n          className={styles.navItem}\r\n          alt=\"navigate to home page\"\r\n        />\r\n      </NavLink>\r\n      <NavLink to=\"/settings\" className=\"Nav-item\">\r\n        <img\r\n          src={settings}\r\n          className={styles.navItem}\r\n          alt=\"navigate to home page\"\r\n        />\r\n      </NavLink>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React from 'react';\r\nimport styles from './TaskContainer.module.css';\r\n\r\nexport const TaskContainer = () => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <p className={styles.smallerText}>25th Sep 13:00 - 13:30</p>\r\n      <p className={styles.TitleText}>Dentist - younger kid</p>\r\n      <p className={styles.smallerText}>Gdynia, ul. Świętojańska</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport styles from './AuthPage.module.css';\r\nimport { TaskContainer } from '../components/TaskContainer';\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <>\r\n      <TaskContainer />\r\n      <TaskContainer />\r\n      <TaskContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n//\r\n","import React from 'react';\r\n\r\nconst CalendarPage = () => <div>To jest Kalendarz</div>;\r\n\r\nexport default CalendarPage;\r\n","import React from 'react';\r\n\r\nconst TasksPage = () => <div>To jest Taski</div>;\r\n\r\nexport default TasksPage;\r\n","import React from 'react';\r\nimport styles from './AccountInfo.module.css';\r\n\r\nexport const AccountInfo = () => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <h1 className={styles.title}>Your account information: </h1>\r\n      <form>\r\n        <input type=\"text\" name=\"text\" placeholder=\"Enter your name\" />\r\n      </form>\r\n      <h2 className={styles.title}>Choose your family role</h2>\r\n      <div className={styles.buttonContainer}>\r\n        <button type=\"submit\">Parent</button>\r\n        <button type=\"submit\">Kid</button>\r\n      </div>\r\n      <h2 className={styles.title}>Add your photo</h2>\r\n      <button type=\"submit\">Click to choose photo</button>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { AccountInfo } from '../components/AccountInfo';\r\nimport styles from './SettingsPage.module.css';\r\n\r\nconst SettingsPage = () => (\r\n  <div className={styles.container}>\r\n    <AccountInfo />\r\n    <p>Connect to family members:</p>\r\n    <p>Task settings:</p>\r\n    <p>Main settings:</p>\r\n    <p>About us:</p>\r\n    <p>Privacy policy:</p>\r\n  </div>\r\n);\r\n\r\nexport default SettingsPage;\r\n","import React from 'react';\r\nimport { BrowserRouter, Switch, Route, Link } from 'react-router-dom';\r\nimport styles from './AppRouter.module.css';\r\nimport AuthPage from './views/AuthPage';\r\nimport Menu from './components/Menu';\r\nimport HomePage from './views/HomePage';\r\nimport CalendarPage from './views/CalendarPage';\r\nimport TasksPage from './views/TasksPage';\r\nimport SettingsPage from './views/SettingsPage';\r\nimport logo from './img/logo.png';\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Link to=\"/\">\r\n        <div>\r\n          <img src={logo} className={styles.logo} alt=\"Logo\" />\r\n        </div>\r\n      </Link>\r\n      <div>\r\n        <Switch>\r\n          <Route path=\"/auth\">\r\n            <Menu />\r\n            <AuthPage />\r\n          </Route>\r\n          <Route path=\"/home\">\r\n            <Menu />\r\n            <HomePage />\r\n          </Route>\r\n          <Route path=\"/calendar\">\r\n            <Menu />\r\n            <CalendarPage />\r\n          </Route>\r\n          <Route path=\"/tasks\">\r\n            <Menu />\r\n            <TasksPage />\r\n          </Route>\r\n          <Route path=\"/settings\">\r\n            <Menu />\r\n            <SettingsPage />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Menu />\r\n            <HomePage />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React from 'react';\r\nimport './App.css';\r\n// import Auth from './views/Auth';\r\nimport AppRouter from './AppRouter';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <AppRouter />\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}